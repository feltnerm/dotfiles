#!/usr/bin/env zsh

### profiler
## set the trace prompt to include seconds, nanoseconds, script name and line number
#PS4='+$(date "+%s:%N") %N:%i> '
## save file stderr to file descriptor 3 and redirect stderr (including trace
## output) to a file with the script's PID as an extension
#exec 3>&2 2>/tmp/startlog.$$
## set options to turn on tracing and expansion of commands contained in the prompt
#setopt xtrace prompt_subst

## debugger
#source ~/bin/zshdb/dbg-trace.sh
# start debgguing with:
# _Dbg_debugger

# powerlevel9k Customization
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(status dir vcs vi_mode)
POWERLEVEL9k_RIGHT_PROMPT_ELEMENTS=(status root_inidicator background_jobs history command_execution_time time)

POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_PROMPT_ADD_NEWLINE=true

POWERLEVEL9K_SHOW_CHANGESET=true
POWERLEVEL9K_CHANGESET_HASH_LENGTH=6
POWERLEVEL9K_VCS_SHORTEN_LENGTH=16
POWERLEVEL9K_VCS_SHORTEN_MIN_LENGTH=11
POWERLEVEL9K_VCS_SHORTEN_STRATEGY="truncate_from_right"
POWERLEVEL9K_VCS_SHORTEN_DELIMITER=".."

#
## zplug ðŸŒº
#

## Check if zplug is installed
if [[ ! -d ~/.zplug ]]; then
  git clone https://github.com/zplug/zplug ~/.zplug
  source ~/.zplug/init.zsh && zplug update --self
fi

source ~/.zplug/init.zsh

## Plugins
zplug "zplug/zplug", hook-build:"zplug --self-manage"
zplug "bhilburn/powerlevel9k", use:"powerlevel9k.zsh-theme", as:"theme"

# does order matter?
zplug "willghatch/zsh-saneopt"
zplug "MichaelAquilina/zsh-emojis", from:"github", use:"emojis.plugin.zsh"
zplug "MichaelAquilina/zsh-you-should-use"
zplug "b4b4r07/emoji-cli", from:"github"
zplug "k4rthik/git-cal", as:command, frozen:1
zplug "tysonwolker/iterm-tab-colors"
zplug "zdharma/fast-syntax-highlighting"
zplug "zdharma/zsh-diff-so-fancy", as:command, use:"bin/git-dsf"
zplug "zsh-users/zaw"
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-completions"

# must be loaded after executing compinit
# zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "hlissner/zsh-autopair", defer:2

# must be loaded after zsh-syntax-highlighting
zplug "zsh-users/zsh-history-substring-search", defer:3

# zplug "mafredri/zsh-async", from:"github", use:"async.zsh"
# zplug "marzocchi/zsh-notify", from:"github"

# Install packages that have not been installed yet
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    else
        echo
    fi
fi

zplug load

# env shared between bash and zsh
[ -f "$HOME/.profile" ] && [ -n "$PS1" ] && source "$HOME/.profile"

## Options
setopt correctall
setopt autocd
setopt auto_resume
setopt extendedglob

# vim emulation
bindkey -v
# Better searching in command mode -- http://stratus3d.com/blog/2017/10/26/better-vi-mode-in-zshell/
autoload history-substring-search-backward
autoload history-substring-search-forward
zle -N history-substring-search-backward
zle -N history-substring-search-forward
bindkey -M vicmd '?' history-substring-search-backward
bindkey -M vicmd '/' history-substring-search-forward

# Beginning search with arrow keys
autoload up-line-or-beginning-search
autoload down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search
bindkey "^[[B" down-line-or-beginning-search
bindkey -M vicmd "k" up-line-or-beginning-search
bindkey -M vicmd "j" down-line-or-beginning-search

# `v` is already mapped to visual mode, so we need to use a different key to
# open Vim
autoload edit-command-line
zle -N edit-command-line
bindkey -M vicmd "^V" edit-command-line

# By default, there is a 0.4 second delay after you hit the <ESC> key and when
# the mode change is registered. This results in a very jarring and frustrating
# transition between modes. Let's reduce this delay to 0.1 seconds.
export KEYTIMEOUT=1

# tmux
## attach to a tmux session via arg, or current directory
function tmuxa() {
    if [[ -z "$1" ]]; then
        tmux attach-session -t $(basename $(pwd))
    else
        tmux attach-session -t "$1"
    fi
}

## create a new tmux session via arg, or current directory
function tmuxn() {
    if [[ -z "$1" ]]; then
        tmux new-session -s $(basename $(pwd))
    else
        tmux new-session -s "$1"
    fi
}

# aliases
alias brewski=brew update && brew upgrade && brew cleanup && brew cask cleanup && brew doctor
alias rmpyc="find . -name \*.pyc -exec rm -v {} \;"
# Recursively delete `.DS_Store` files
alias rmdstore="find . -name \*.DS_Store -exec rm -v {} \;"
alias clean="rmpyc && rmdstore"
alias cp="cp -i"
alias cpv="rsync -pogr --progress"
alias cpp="rsync -WavP --human-readable --progress $1 $2"
alias mv="mv -i"
alias rm="rm -i"
alias oracow="fortune | cowsay | lolcat"
alias ls="exa"
alias l="ls"
alias ll="ls -l"
alias lh="ls -h"
alias la="ls -la"
alias lad="ls -lah"
alias lsd="ls -l | grep '^d'"
# if _which k; then
#     alias lsk "k"
# fi
# Shortcuts
alias g="git"
alias v="vim"
alias dc="docker-compose"
alias dcu="docker-compose up"
alias dcd="docker-compose down"
alias dcr="docker-compose down; and docker-compose up"

alias cat="bat"
alias weather="curl wttr.in"

# count lines of code
alias cloc="cloc --exclude-dir=.git,.hg"

# `cat` with pretty colors
alias hilite="pygmentize -O style=monokai -f console256 -g"

# OS stuff
alias ports="lsof -i -P -sTCP:LISTEN"
alias pm="ps ax | grep -v grep | grep $@"
alias ssh-keygen2="ssh-keygen -t rsa -C $(whoami)@$(hostname)-$(date -u)"

# df < pydf < cdf
# if _which pydf; then
#     alias df='pydf'
# else
#     if _which cdf; then
#         alias df='cdf'
#     fi
# fi

# ssh and auth
function add_keys() {
    local login KEYS keychain_cmd
    login=$1
    KEYS=""
    keychain_cmd="keychain --eval --agents ssh "

    for i in ${HOME}/.ssh/* ; do
        if [[ -r $i.pub && -r $i ]]; then
            [[ -n $KEYS ]] && KEYS=$KEYS" "$i
            [[ -z $KEYS ]] && KEYS=$i
        fi
    done

    [[ -n $login ]] && keychain_cmd="$keychain_cmd --stop others $KEYS"
    [[ -z $login ]] && keychain_cmd="$keychain_cmd --quiet -Q $KEYS"
    echo "$keychain_cmd"
}

# Widen stuff
## kubernetes
K8S_DOCKER_IMAGE_VERSION=1.14.8-20191217
K8S_CLI="docker run --tty --interactive --rm \
    --user $(id -u) \
    -v ~/.kube:/config/.kube \
    -v ~/.aws:/config/.aws \
    quay.io/widen/k8s:$K8S_DOCKER_IMAGE_VERSION"
alias kubectl="$K8S_CLI kubectl $@"
alias kg="kubectl get"
alias kd="kubectl describe"
alias kgj="kubectl get jobs"
alias kgp="kubectl get pods"
alias helm="$K8S_CLI helm $@"

# utils
## reload the shell
function reloadShell() {
    zplug load && source ~/.zshrc
}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
